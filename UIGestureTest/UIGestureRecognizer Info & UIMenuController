
 手势：UIGestureRecognizer(所有手势的父类)
 iOS手势分为：
 点击UITapGestureRecognizer、
 长按UILongPressGestureRecognizer、
 轻扫UISwipeGestureRecognizer、
 捏合UIPinchGestureRecognizer、
 旋转UIRotationGestureRecognizer、
 拖动UIPanGestureRecognizer、
 屏幕边缘滑动UIScreenEdgePanGestureRecognizer、
 开发的时候根据不同的需求选择对应的手势
 PS：手势是需要添加到UI空间上面去使用，只有绑定手势的空间才能捕捉到手势的响应
 2.轻扫滑动==PS:一个UISwipeGestureRecognizer对象只能绑定一个滑动方向，如果要让一个view响应多个滑动方向就要创建多少个UISwipeGestureRecognizer对象
 
 有些手势其实是互相关联的，例如 Tap 与 LongPress、Swipe与 Pan，或是 Tap 一次与Tap 兩次。当一個 UIView 同时添加兩个相关联的手势时，到底我这一下手指头按的要算是 Tap 还是 LongPress？如果照預设作法来看，只要「先滿足条件」的就会跳出并呼叫对应方法，举例来说，如果同时注册了 Pan 和 Swipe，只要手指头一移动就会触发 Pan 然后跳出，因而永远都不會发生 Swipe；单点与双点的情形也是一样，永远都只会触发单点，不會有双点。
 
 那么这个问题有解吗？答案是肯定的，UIGestureRecognizer 有个方法叫做requireGestureRecognizerToFail，他可以指定某一个 recognizer，即便自己已经滿足條件了，也不會立刻触发，会等到该指定的 recognizer 确定失败之后才触发。
 
 #pragma mark==menu
 -(void)showMenu:(UILongPressGestureRecognizer *)longP
 {
 CGPoint pressPoint = [longP locationInView:longP.view];
 UIMenuController *menu=[UIMenuController sharedMenuController];
 
 //PS:UIMenuItem绑定的方法传的参数是UIMenuController
 UIMenuItem *item1=[[UIMenuItem alloc]initWithTitle:@"复制" action:@selector(menuClick:)];
 UIMenuItem *item2=[[UIMenuItem alloc]initWithTitle:@"剪切" action:@selector(menuClick:)];
 UIMenuItem *item3=[[UIMenuItem alloc]initWithTitle:@"搜索" action:@selector(menuClick:)];
 UIMenuItem *item4=[[UIMenuItem alloc]initWithTitle:@"分享" action:@selector(menuClick:)];
 
 menu.menuItems=@[item1,item2,item3,item4];
 
 [menu setTargetRect:CGRectMake(pressPoint.x, pressPoint.y, 100, 30) inView:view];
 [menu setMenuVisible:YES animated:YES];
 }
 -(void)menuClick:(id)item
 {
 NSLog(@"%d",[item isKindOfClass:[UIMenuController class]]); //PS:UIMenuItem绑定的方法传的参数是UIMenuController
 NSLog(@"45456456456");
 //    NSLog(@"%@",item.title);
 }
 //PS：copy和cut这两个方法是系统为Menuitem绑定的方法，在为menuitem绑定方法的时候要记得不要跟着两个方法重名
 //-(void)copy:(id)sender
 //{
 //
 //}
 //-(void)cut:(id)sender
 //{
 //}
 //PS：要想显示UIMenuController：canBecomeFirstResponder。否则不会显示
 -(BOOL)canBecomeFirstResponder
 {
 return YES;
 }

 */
